///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class EventResultDataResultsPrevious {
/*
{
  "resourceURI": "http://gateway.marvel.com/v1/public/events/233",
  "name": "Atlantis Attacks"
} 
*/

  String? resourceURI;
  String? name;

  EventResultDataResultsPrevious({
    this.resourceURI,
    this.name,
  });
  EventResultDataResultsPrevious.fromJson(Map<String, dynamic> json) {
    resourceURI = json['resourceURI']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['resourceURI'] = resourceURI;
    data['name'] = name;
    return data;
  }
}

class EventResultDataResultsNext {
/*
{
  "resourceURI": "http://gateway.marvel.com/v1/public/events/240",
  "name": "Days of Future Present"
} 
*/

  String? resourceURI;
  String? name;

  EventResultDataResultsNext({
    this.resourceURI,
    this.name,
  });
  EventResultDataResultsNext.fromJson(Map<String, dynamic> json) {
    resourceURI = json['resourceURI']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['resourceURI'] = resourceURI;
    data['name'] = name;
    return data;
  }
}

class EventResultDataResultsSeriesItems {
/*
{
  "resourceURI": "http://gateway.marvel.com/v1/public/series/2116",
  "name": "Alpha Flight (1983 - 1994)"
} 
*/

  String? resourceURI;
  String? name;

  EventResultDataResultsSeriesItems({
    this.resourceURI,
    this.name,
  });
  EventResultDataResultsSeriesItems.fromJson(Map<String, dynamic> json) {
    resourceURI = json['resourceURI']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['resourceURI'] = resourceURI;
    data['name'] = name;
    return data;
  }
}

class EventResultDataResultsSeries {
/*
{
  "available": 22,
  "collectionURI": "http://gateway.marvel.com/v1/public/events/116/series",
  "items": [
    {
      "resourceURI": "http://gateway.marvel.com/v1/public/series/2116",
      "name": "Alpha Flight (1983 - 1994)"
    }
  ],
  "returned": 20
} 
*/

  int? available;
  String? collectionURI;
  List<EventResultDataResultsSeriesItems?>? items;
  int? returned;

  EventResultDataResultsSeries({
    this.available,
    this.collectionURI,
    this.items,
    this.returned,
  });
  EventResultDataResultsSeries.fromJson(Map<String, dynamic> json) {
    available = json['available']?.toInt();
    collectionURI = json['collectionURI']?.toString();
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <EventResultDataResultsSeriesItems>[];
      v.forEach((v) {
        arr0.add(EventResultDataResultsSeriesItems.fromJson(v));
      });
      items = arr0;
    }
    returned = json['returned']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['available'] = available;
    data['collectionURI'] = collectionURI;
    if (items != null) {
      final v = items;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['items'] = arr0;
    }
    data['returned'] = returned;
    return data;
  }
}

class EventResultDataResultsComicsItems {
/*
{
  "resourceURI": "http://gateway.marvel.com/v1/public/comics/12744",
  "name": "Alpha Flight (1983) #79"
} 
*/

  String? resourceURI;
  String? name;

  EventResultDataResultsComicsItems({
    this.resourceURI,
    this.name,
  });
  EventResultDataResultsComicsItems.fromJson(Map<String, dynamic> json) {
    resourceURI = json['resourceURI']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['resourceURI'] = resourceURI;
    data['name'] = name;
    return data;
  }
}

class EventResultDataResultsComics {
/*
{
  "available": 53,
  "collectionURI": "http://gateway.marvel.com/v1/public/events/116/comics",
  "items": [
    {
      "resourceURI": "http://gateway.marvel.com/v1/public/comics/12744",
      "name": "Alpha Flight (1983) #79"
    }
  ],
  "returned": 20
} 
*/

  int? available;
  String? collectionURI;
  List<EventResultDataResultsComicsItems?>? items;
  int? returned;

  EventResultDataResultsComics({
    this.available,
    this.collectionURI,
    this.items,
    this.returned,
  });
  EventResultDataResultsComics.fromJson(Map<String, dynamic> json) {
    available = json['available']?.toInt();
    collectionURI = json['collectionURI']?.toString();
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <EventResultDataResultsComicsItems>[];
      v.forEach((v) {
        arr0.add(EventResultDataResultsComicsItems.fromJson(v));
      });
      items = arr0;
    }
    returned = json['returned']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['available'] = available;
    data['collectionURI'] = collectionURI;
    if (items != null) {
      final v = items;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['items'] = arr0;
    }
    data['returned'] = returned;
    return data;
  }
}

class EventResultDataResultsStoriesItems {
/*
{
  "resourceURI": "http://gateway.marvel.com/v1/public/stories/12960",
  "name": "Fantastic Four (1961) #334",
  "type": "cover"
} 
*/

  String? resourceURI;
  String? name;
  String? type;

  EventResultDataResultsStoriesItems({
    this.resourceURI,
    this.name,
    this.type,
  });
  EventResultDataResultsStoriesItems.fromJson(Map<String, dynamic> json) {
    resourceURI = json['resourceURI']?.toString();
    name = json['name']?.toString();
    type = json['type']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['resourceURI'] = resourceURI;
    data['name'] = name;
    data['type'] = type;
    return data;
  }
}

class EventResultDataResultsStories {
/*
{
  "available": 161,
  "collectionURI": "http://gateway.marvel.com/v1/public/events/116/stories",
  "items": [
    {
      "resourceURI": "http://gateway.marvel.com/v1/public/stories/12960",
      "name": "Fantastic Four (1961) #334",
      "type": "cover"
    }
  ],
  "returned": 20
} 
*/

  int? available;
  String? collectionURI;
  List<EventResultDataResultsStoriesItems?>? items;
  int? returned;

  EventResultDataResultsStories({
    this.available,
    this.collectionURI,
    this.items,
    this.returned,
  });
  EventResultDataResultsStories.fromJson(Map<String, dynamic> json) {
    available = json['available']?.toInt();
    collectionURI = json['collectionURI']?.toString();
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <EventResultDataResultsStoriesItems>[];
      v.forEach((v) {
        arr0.add(EventResultDataResultsStoriesItems.fromJson(v));
      });
      items = arr0;
    }
    returned = json['returned']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['available'] = available;
    data['collectionURI'] = collectionURI;
    if (items != null) {
      final v = items;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['items'] = arr0;
    }
    data['returned'] = returned;
    return data;
  }
}

class EventResultDataResultsCharactersItems {
/*
{
  "resourceURI": "http://gateway.marvel.com/v1/public/characters/1009435",
  "name": "Alicia Masters"
} 
*/

  String? resourceURI;
  String? name;

  EventResultDataResultsCharactersItems({
    this.resourceURI,
    this.name,
  });
  EventResultDataResultsCharactersItems.fromJson(Map<String, dynamic> json) {
    resourceURI = json['resourceURI']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['resourceURI'] = resourceURI;
    data['name'] = name;
    return data;
  }
}

class EventResultDataResultsCharacters {
/*
{
  "available": 108,
  "collectionURI": "http://gateway.marvel.com/v1/public/events/116/characters",
  "items": [
    {
      "resourceURI": "http://gateway.marvel.com/v1/public/characters/1009435",
      "name": "Alicia Masters"
    }
  ],
  "returned": 20
} 
*/

  int? available;
  String? collectionURI;
  List<EventResultDataResultsCharactersItems?>? items;
  int? returned;

  EventResultDataResultsCharacters({
    this.available,
    this.collectionURI,
    this.items,
    this.returned,
  });
  EventResultDataResultsCharacters.fromJson(Map<String, dynamic> json) {
    available = json['available']?.toInt();
    collectionURI = json['collectionURI']?.toString();
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <EventResultDataResultsCharactersItems>[];
      v.forEach((v) {
        arr0.add(EventResultDataResultsCharactersItems.fromJson(v));
      });
      items = arr0;
    }
    returned = json['returned']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['available'] = available;
    data['collectionURI'] = collectionURI;
    if (items != null) {
      final v = items;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['items'] = arr0;
    }
    data['returned'] = returned;
    return data;
  }
}

class EventResultDataResultsCreatorsItems {
/*
{
  "resourceURI": "http://gateway.marvel.com/v1/public/creators/2707",
  "name": "Jeff Albrecht",
  "role": "inker"
} 
*/

  String? resourceURI;
  String? name;
  String? role;

  EventResultDataResultsCreatorsItems({
    this.resourceURI,
    this.name,
    this.role,
  });
  EventResultDataResultsCreatorsItems.fromJson(Map<String, dynamic> json) {
    resourceURI = json['resourceURI']?.toString();
    name = json['name']?.toString();
    role = json['role']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['resourceURI'] = resourceURI;
    data['name'] = name;
    data['role'] = role;
    return data;
  }
}

class EventResultDataResultsCreators {
/*
{
  "available": 102,
  "collectionURI": "http://gateway.marvel.com/v1/public/events/116/creators",
  "items": [
    {
      "resourceURI": "http://gateway.marvel.com/v1/public/creators/2707",
      "name": "Jeff Albrecht",
      "role": "inker"
    }
  ],
  "returned": 20
} 
*/

  int? available;
  String? collectionURI;
  List<EventResultDataResultsCreatorsItems?>? items;
  int? returned;

  EventResultDataResultsCreators({
    this.available,
    this.collectionURI,
    this.items,
    this.returned,
  });
  EventResultDataResultsCreators.fromJson(Map<String, dynamic> json) {
    available = json['available']?.toInt();
    collectionURI = json['collectionURI']?.toString();
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <EventResultDataResultsCreatorsItems>[];
      v.forEach((v) {
        arr0.add(EventResultDataResultsCreatorsItems.fromJson(v));
      });
      items = arr0;
    }
    returned = json['returned']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['available'] = available;
    data['collectionURI'] = collectionURI;
    if (items != null) {
      final v = items;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['items'] = arr0;
    }
    data['returned'] = returned;
    return data;
  }
}

class EventResultDataResultsThumbnail {
/*
{
  "path": "http://i.annihil.us/u/prod/marvel/i/mg/9/40/51ca10d996b8b",
  "extension": "jpg"
} 
*/

  String? path;
  String? extension;

  EventResultDataResultsThumbnail({
    this.path,
    this.extension,
  });
  EventResultDataResultsThumbnail.fromJson(Map<String, dynamic> json) {
    path = json['path']?.toString();
    extension = json['extension']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['path'] = path;
    data['extension'] = extension;
    return data;
  }
}

class EventResultDataResultsUrls {
/*
{
  "type": "detail",
  "url": "http://marvel.com/comics/events/116/acts_of_vengeance?utm_campaign=apiRef&utm_source=edc015b686b72ca236f9a3a730613076"
} 
*/

  String? type;
  String? url;

  EventResultDataResultsUrls({
    this.type,
    this.url,
  });
  EventResultDataResultsUrls.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['url'] = url;
    return data;
  }
}

class EventResultDataResults {
  int? id;
  String? title;
  String? description;
  String? resourceURI;
  List<EventResultDataResultsUrls?>? urls;
  String? modified;
  String? start;
  String? end;
  EventResultDataResultsThumbnail? thumbnail;
  EventResultDataResultsCreators? creators;
  EventResultDataResultsCharacters? characters;
  EventResultDataResultsStories? stories;
  EventResultDataResultsComics? comics;
  EventResultDataResultsSeries? series;
  EventResultDataResultsNext? next;
  EventResultDataResultsPrevious? previous;

  EventResultDataResults({
    this.id,
    this.title,
    this.description,
    this.resourceURI,
    this.urls,
    this.modified,
    this.start,
    this.end,
    this.thumbnail,
    this.creators,
    this.characters,
    this.stories,
    this.comics,
    this.series,
    this.next,
    this.previous,
  });
  EventResultDataResults.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    title = json['title']?.toString();
    description = json['description']?.toString();
    resourceURI = json['resourceURI']?.toString();
    if (json['urls'] != null) {
      final v = json['urls'];
      final arr0 = <EventResultDataResultsUrls>[];
      v.forEach((v) {
        arr0.add(EventResultDataResultsUrls.fromJson(v));
      });
      urls = arr0;
    }
    modified = json['modified']?.toString();
    start = json['start']?.toString();
    end = json['end']?.toString();
    thumbnail = (json['thumbnail'] != null)
        ? EventResultDataResultsThumbnail.fromJson(json['thumbnail'])
        : null;
    creators = (json['creators'] != null)
        ? EventResultDataResultsCreators.fromJson(json['creators'])
        : null;
    characters = (json['characters'] != null)
        ? EventResultDataResultsCharacters.fromJson(json['characters'])
        : null;
    stories = (json['stories'] != null)
        ? EventResultDataResultsStories.fromJson(json['stories'])
        : null;
    comics = (json['comics'] != null)
        ? EventResultDataResultsComics.fromJson(json['comics'])
        : null;
    series = (json['series'] != null)
        ? EventResultDataResultsSeries.fromJson(json['series'])
        : null;
    next = (json['next'] != null)
        ? EventResultDataResultsNext.fromJson(json['next'])
        : null;
    previous = (json['previous'] != null)
        ? EventResultDataResultsPrevious.fromJson(json['previous'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['title'] = title;
    data['description'] = description;
    data['resourceURI'] = resourceURI;
    if (urls != null) {
      final v = urls;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['urls'] = arr0;
    }
    data['modified'] = modified;
    data['start'] = start;
    data['end'] = end;
    if (thumbnail != null) {
      data['thumbnail'] = thumbnail!.toJson();
    }
    if (creators != null) {
      data['creators'] = creators!.toJson();
    }
    if (characters != null) {
      data['characters'] = characters!.toJson();
    }
    if (stories != null) {
      data['stories'] = stories!.toJson();
    }
    if (comics != null) {
      data['comics'] = comics!.toJson();
    }
    if (series != null) {
      data['series'] = series!.toJson();
    }
    if (next != null) {
      data['next'] = next!.toJson();
    }
    if (previous != null) {
      data['previous'] = previous!.toJson();
    }
    return data;
  }

  @override
  String toString() {
    return 'EventResultDataResults(id: $id, title: $title, description: $description, resourceURI: $resourceURI, urls: $urls, modified: $modified, start: $start, end: $end)';
  }
}

class EventResultData {
/*
{
  "offset": 0,
  "limit": 20,
  "total": 74,
  "count": 20,
  "results": [
    {
      "id": 116,
      "title": "Acts of Vengeance!",
      "description": "Loki sets about convincing the super-villains of Earth to attack heroes other than those they normally fight in an attempt to destroy the Avengers to absolve his guilt over inadvertently creating the team in the first place.",
      "resourceURI": "http://gateway.marvel.com/v1/public/events/116",
      "urls": [
        {
          "type": "detail",
          "url": "http://marvel.com/comics/events/116/acts_of_vengeance?utm_campaign=apiRef&utm_source=edc015b686b72ca236f9a3a730613076"
        }
      ],
      "modified": "2013-06-28T16:31:24-0400",
      "start": "1989-12-10 00:00:00",
      "end": "2008-01-04 00:00:00",
      "thumbnail": {
        "path": "http://i.annihil.us/u/prod/marvel/i/mg/9/40/51ca10d996b8b",
        "extension": "jpg"
      },
      "creators": {
        "available": 102,
        "collectionURI": "http://gateway.marvel.com/v1/public/events/116/creators",
        "items": [
          {
            "resourceURI": "http://gateway.marvel.com/v1/public/creators/2707",
            "name": "Jeff Albrecht",
            "role": "inker"
          }
        ],
        "returned": 20
      },
      "characters": {
        "available": 108,
        "collectionURI": "http://gateway.marvel.com/v1/public/events/116/characters",
        "items": [
          {
            "resourceURI": "http://gateway.marvel.com/v1/public/characters/1009435",
            "name": "Alicia Masters"
          }
        ],
        "returned": 20
      },
      "stories": {
        "available": 161,
        "collectionURI": "http://gateway.marvel.com/v1/public/events/116/stories",
        "items": [
          {
            "resourceURI": "http://gateway.marvel.com/v1/public/stories/12960",
            "name": "Fantastic Four (1961) #334",
            "type": "cover"
          }
        ],
        "returned": 20
      },
      "comics": {
        "available": 53,
        "collectionURI": "http://gateway.marvel.com/v1/public/events/116/comics",
        "items": [
          {
            "resourceURI": "http://gateway.marvel.com/v1/public/comics/12744",
            "name": "Alpha Flight (1983) #79"
          }
        ],
        "returned": 20
      },
      "series": {
        "available": 22,
        "collectionURI": "http://gateway.marvel.com/v1/public/events/116/series",
        "items": [
          {
            "resourceURI": "http://gateway.marvel.com/v1/public/series/2116",
            "name": "Alpha Flight (1983 - 1994)"
          }
        ],
        "returned": 20
      },
      "next": {
        "resourceURI": "http://gateway.marvel.com/v1/public/events/240",
        "name": "Days of Future Present"
      },
      "previous": {
        "resourceURI": "http://gateway.marvel.com/v1/public/events/233",
        "name": "Atlantis Attacks"
      }
    }
  ]
} 
*/

  int? offset;
  int? limit;
  int? total;
  int? count;
  List<EventResultDataResults?>? results;

  EventResultData({
    this.offset,
    this.limit,
    this.total,
    this.count,
    this.results,
  });
  EventResultData.fromJson(Map<String, dynamic> json) {
    offset = json['offset']?.toInt();
    limit = json['limit']?.toInt();
    total = json['total']?.toInt();
    count = json['count']?.toInt();
    if (json['results'] != null) {
      final v = json['results'];
      final arr0 = <EventResultDataResults>[];
      v.forEach((v) {
        arr0.add(EventResultDataResults.fromJson(v));
      });
      results = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['offset'] = offset;
    data['limit'] = limit;
    data['total'] = total;
    data['count'] = count;
    if (results != null) {
      final v = results;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['results'] = arr0;
    }
    return data;
  }
}

class EventResult {
/*
{
  "code": 200,
  "status": "Ok",
  "copyright": "© 2022 MARVEL",
  "attributionText": "Data provided by Marvel. © 2022 MARVEL",
  "attributionHTML": "<a href=\"http://marvel.com\">Data provided by Marvel. © 2022 MARVEL</a>",
  "etag": "618664142d1db23cc5ebb9858468230ba5c2aea6",
  "data": {
    "offset": 0,
    "limit": 20,
    "total": 74,
    "count": 20,
    "results": [
      {
        "id": 116,
        "title": "Acts of Vengeance!",
        "description": "Loki sets about convincing the super-villains of Earth to attack heroes other than those they normally fight in an attempt to destroy the Avengers to absolve his guilt over inadvertently creating the team in the first place.",
        "resourceURI": "http://gateway.marvel.com/v1/public/events/116",
        "urls": [
          {
            "type": "detail",
            "url": "http://marvel.com/comics/events/116/acts_of_vengeance?utm_campaign=apiRef&utm_source=edc015b686b72ca236f9a3a730613076"
          }
        ],
        "modified": "2013-06-28T16:31:24-0400",
        "start": "1989-12-10 00:00:00",
        "end": "2008-01-04 00:00:00",
        "thumbnail": {
          "path": "http://i.annihil.us/u/prod/marvel/i/mg/9/40/51ca10d996b8b",
          "extension": "jpg"
        },
        "creators": {
          "available": 102,
          "collectionURI": "http://gateway.marvel.com/v1/public/events/116/creators",
          "items": [
            {
              "resourceURI": "http://gateway.marvel.com/v1/public/creators/2707",
              "name": "Jeff Albrecht",
              "role": "inker"
            }
          ],
          "returned": 20
        },
        "characters": {
          "available": 108,
          "collectionURI": "http://gateway.marvel.com/v1/public/events/116/characters",
          "items": [
            {
              "resourceURI": "http://gateway.marvel.com/v1/public/characters/1009435",
              "name": "Alicia Masters"
            }
          ],
          "returned": 20
        },
        "stories": {
          "available": 161,
          "collectionURI": "http://gateway.marvel.com/v1/public/events/116/stories",
          "items": [
            {
              "resourceURI": "http://gateway.marvel.com/v1/public/stories/12960",
              "name": "Fantastic Four (1961) #334",
              "type": "cover"
            }
          ],
          "returned": 20
        },
        "comics": {
          "available": 53,
          "collectionURI": "http://gateway.marvel.com/v1/public/events/116/comics",
          "items": [
            {
              "resourceURI": "http://gateway.marvel.com/v1/public/comics/12744",
              "name": "Alpha Flight (1983) #79"
            }
          ],
          "returned": 20
        },
        "series": {
          "available": 22,
          "collectionURI": "http://gateway.marvel.com/v1/public/events/116/series",
          "items": [
            {
              "resourceURI": "http://gateway.marvel.com/v1/public/series/2116",
              "name": "Alpha Flight (1983 - 1994)"
            }
          ],
          "returned": 20
        },
        "next": {
          "resourceURI": "http://gateway.marvel.com/v1/public/events/240",
          "name": "Days of Future Present"
        },
        "previous": {
          "resourceURI": "http://gateway.marvel.com/v1/public/events/233",
          "name": "Atlantis Attacks"
        }
      }
    ]
  }
} 
*/

  int? code;
  String? status;
  String? copyright;
  String? attributionText;
  String? attributionHTML;
  String? etag;
  EventResultData? data;

  EventResult({
    this.code,
    this.status,
    this.copyright,
    this.attributionText,
    this.attributionHTML,
    this.etag,
    this.data,
  });
  EventResult.fromJson(Map<String, dynamic> json) {
    code = json['code']?.toInt();
    status = json['status']?.toString();
    copyright = json['copyright']?.toString();
    attributionText = json['attributionText']?.toString();
    attributionHTML = json['attributionHTML']?.toString();
    etag = json['etag']?.toString();
    data =
        (json['data'] != null) ? EventResultData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['status'] = status;
    data['copyright'] = copyright;
    data['attributionText'] = attributionText;
    data['attributionHTML'] = attributionHTML;
    data['etag'] = etag;
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}
